{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","margin","width","display","backgroundColor","minHeight","color","paddingRight","button","height","borderRadius","fontSize","idDic","0","1","2","3","4","5","6","7","8","9","App","classes","useState","input","setInput","result","setResult","clear","numberPress","val","toString","c","opPress","op","r","length","match","slice","calculate","eval","decimal","includes","id","className","container","item","xs","zeroMinWidth","direction","justify","alignItems","variant","style","overflowWrap","noWrap","onClick","map","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d6a16a.chunk.js","sourcesContent":["import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport  { useState } from 'react';\nimport { Typography } from '@material-ui/core'; \n\nconst useStyles = makeStyles((theme) => ({\n  \n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    width:'min(500px, 100vw)',\n    // maxWidth: 500,\n  },\n  display: {\n    backgroundColor: 'black',\n    minHeight: 70,\n    color: 'white',\n    paddingRight: 10\n  },\n  button : {\n    minHeight: 70,\n    height: '100%',\n    width: '100%',\n    borderRadius: 0,\n    fontSize:25,\n  }\n\n}));\n\nconst idDic = {\n  0: 'zero',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n  9: 'nine',\n  '+': 'add',\n  '-': 'subtract',\n  '*': 'multiply',\n  '/': 'divide',\n}\n\nfunction App() {\n  const classes = useStyles();\n  const [input, setInput] = useState('0')\n  const [result, setResult] = useState('') \n  \n  const clear = () => {\n    setInput('0')\n    setResult('')\n  }\n\n  const numberPress = (val) => {\n    if (input == '0'){\n      if (val != 0){\n        setInput(val.toString())\n      }\n    }\n    else{\n      setInput(c => c + val)\n    }\n  }\n  const opPress = (op) => {\n    if (input){\n      setResult(r => r + input + op)\n      setInput('')\n    }\n    if (!input ){\n      if (op == '-' && result ){\n        if (result[result.length - 1].match(/[+/*]/)){\n          setResult(r => r + op)\n        }\n        else if (result[result.length - 1] == '-' && result[result.length - 2].match(/[0-9]/)){\n          setResult(r => r + op)\n        }\n      } else{\n        if (result[result.length - 2].match(/[0-9]/)){\n          setResult(r => r.slice(0, -1) + op)\n        } else{\n          setResult(r => r.slice(0, -2) + op)\n        }\n      }\n    }\n  }\n\n\n  const calculate =  () => {\n    \n    if (input){\n\n      setResult(r => r + input);\n      setResult(r =>{\n        setInput(eval(r).toString())\n        return ''\n      })\n\n    \n    }\n  }\n\n  const decimal =  () => {\n     setInput(c => {\n      if (!c){\n        return '0.'\n      }\n      if (c.includes(\".\")){\n        return c\n      } else{\n        return (`${c}.`)\n      }\n    })\n    \n  }\n\n\n\n  return (\n    <div id=\"App\">\n      <div className=\"main-content\">\n        <Paper className={classes.paper}>\n\n          <Grid container >\n             \n            <Grid item xs={9} container  zeroMinWidth direction=\"column\" justify=\"flex-end\" alignItems=\"flex-end\" className={classes.display}>\n              <Grid item xs >\n                <Typography variant=\"body1\" style={{overflowWrap: 'break-word'}}> \n                  {result}\n                </Typography> \n              </Grid>\n\n              <Grid item xs >\n                <Typography id='display' noWrap variant=\"h4\" >{input}</Typography>\n              </Grid>\n            </Grid>\n\n            <Grid item xs={3}>\n                <Button id='clear' variant=\"contained\" onClick={() => clear()} color=\"secondary\" className={classes.button}>AC</Button>\n              </Grid>\n\n            <Grid item container xs={9}  >\n              {[7,8,9,4,5,6,1,2,3,0].map((value) => (\n              <Grid item xs={4}>\n                <Button id={idDic[value]} variant=\"outlined\" onClick={() => numberPress(value)} className={classes.button}>{value}</Button>\n              </Grid>\n            ))}\n              <Grid item xs={4}>\n                <Button id='decimal' variant=\"outlined\" onClick={() => decimal()}className={classes.button}>.</Button>\n              </Grid>\n\n              <Grid item xs={4}>\n                <Button id='equals' onClick={() => calculate()} variant=\"contained\" color='primary' className={classes.button}>=</Button>\n              </Grid>\n            </Grid>\n\n            <Grid item container xs={3}  >\n              {['/', '*', '-', '+'].map((value) => (\n              <Grid item xs={12}>\n                <Button id={idDic[value]} onClick={() => opPress(value)} variant=\"contained\" color='green' className={classes.button}>{value}</Button>\n              </Grid>\n            ))}\n            </Grid>\n\n          </Grid> \n\n        </Paper>\n        \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}